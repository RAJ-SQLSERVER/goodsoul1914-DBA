
DECLARE @DBMaintInlineTokensCT INT;
SET @DBMaintInlineTokensCT = (SELECT COUNT(*) FROM Minion.DBMaintInlineTokens)
IF @DBMaintInlineTokensCT = 0
BEGIN

INSERT INTO [Minion].[DBMaintInlineTokens]
(DynamicName, ParseMethod, IsCustom, Definition, IsActive, Comment)
VALUES
('DBName', '@DBName', 0, 'Static value. This static value cannot be changed. It is here to be added to the list of available parameters. If you wish to use the DBName in another format then create a custom parameter.  See Help for details.', 1, NULL ), 
('Server', 'ISNULL(CAST(SERVERPROPERTY(''MachineName'') AS VARCHAR(25)), '''')', 0, 'Returns the name of the current server.  If the current server is clustered then the SQL cluster name is returned.  If you want to return the node name instead, then use the NETBIOS parameter instead.', 1, NULL ), 
('MonthName', 'LEFT(DATENAME(MONTH, @ExecutionDateTime ),3)', 0, 'Returns the 3 character abbreviation of the month (e.g. Jan, Feb, etc.).  If you want to use the full month name then you may alter this one or create a custom parameter.  We advise that you use custom code instead to keep the original data in tact, but if you really don''t wat to ever use the abbreviation then changing this code is suitable.', 1, NULL ), 
('Instance', 'ISNULL(CAST(SERVERPROPERTY(''InstanceName'') AS VARCHAR(50)), '''')', 0, 'Returns the instance name of the current SQL install.  If you''re on the default instance then an empty string will be returned.  If you always want a value returned then you''re welcome to change this code to return ''Default'' in this case.  However, it''s always advised that you keep the current code base in tact by creating a custom parameter.', 1, NULL ), 
('Date', 'CAST(YEAR(@ExecutionDateTime) AS VARCHAR(4)) + RIGHT(''0'' + RTRIM(CAST(MONTH(@ExecutionDateTime) AS CHAR(2))), 2) + RIGHT(''0'' + RTRIM(CAST(DAY(@ExecutionDateTime) AS CHAR(2))), 2)', 0, 'Returns the date in yyyyMD format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('Year', 'CAST(YEAR(@ExecutionDateTime) AS VARCHAR(4))', 0, 'Returns the year in yyyy format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('Month', 'RIGHT(''0'' + RTRIM(CAST(MONTH(@ExecutionDateTime) AS CHAR(2))), 2)', 0, 'Returns the month in M format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('Day', 'RIGHT(''0'' + RTRIM(CAST(DAY(@ExecutionDateTime) AS CHAR(2))), 2)', 0, 'Returns the day in D format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('DayName', 'LEFT(DATENAME(dw, @ExecutionDateTime ),3)', 0, 'Returns the name abbreviation of the current day format (e.g. Mon, Tue, Wed, etc.).  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('AGName', 'ISNULL(AG.name, ''Sean'') FROM master.sys.availability_groups AS AG LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states as agstates ON AG.group_id = agstates.group_id INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id INNER JOIN master.sys.dm_hadr_availability_replica_states AS arstates ON AR.replica_id = arstates.replica_id AND arstates.is_local = 1 INNER JOIN master.sys.dm_hadr_database_replica_cluster_states AS dbcs ON arstates.replica_id = dbcs.replica_id LEFT OUTER JOIN master.sys.dm_hadr_database_replica_states AS dbrs ON dbcs.replica_id = dbrs.replica_id AND dbcs.group_database_id = dbrs.group_database_id WHERE dbcs.database_name = @DBName', 0, 'Returns the Availability Group name that the DB belongs to.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('BackupType', '@BackupType', 0, 'Static value. This static value cannot be changed. It is here to be added to the list of available parameters. If you wish to use the BackupType in another format then create a custom parameter.  See Help for details.', 1, NULL ), 
('Time', 'REPLACE(CONVERT(VARCHAR(8), @ExecutionDateTime, 108), '':'', '''')', 0, 'Returns the time in HMS format.  This is in the 24-hr clock format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('Hour', 'RIGHT(''0'' + RTRIM(CAST(DATEPART(HOUR, @ExecutionDateTime) AS CHAR(2))), 2)', 0, 'Returns the hour in H format.  This is in the 24-hr clock format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('Minute', 'RIGHT(''0'' + RTRIM(CAST(DATEPART(MINUTE, @ExecutionDateTime) AS CHAR(2))), 2)', 0, 'Returns the minute in M format.   If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('Second', 'RIGHT(''0'' + RTRIM(CAST(DATEPART(SECOND, @ExecutionDateTime) AS CHAR(2))), 2)', 0, 'Returns the second in S format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('Millisecond', 'DATEPART(MILLISECOND, @ExecutionDateTime)', 0, 'Returns the millisecond in mmm format.  If something else is desired then either alter this code or create a custom parameter, which is advised to keep the original code base in tact.  But, you''re free to change it as you like.', 1, NULL ), 
('BackupTypeExtension', 'CASE WHEN @BackupType = ''Full'' THEN ''.BAK'' WHEN @BackupType = ''Diff'' THEN ''.DIFF'' WHEN @BackupType = ''Log'' THEN ''.TRN'' END', 0, 'Returns a dynamic backup file extension based on the backup type.', 1, NULL ), 
('SoSL', '@ServerLabel', 0, 'SoSL stands for Server OR ServerLabel.  This allows you to use the ServerLabel if it''s present in the SettingsPath table.  You can still use %Server% and %ServerLabel%, but this is more dynamic if you want to use one or the other.  This is the default and mimics MB 1.2 and below behavior.  This option is included in here only to be part of the listing.  It cannot be turned on or off or altered.  If you don''t like the way this returns then use other variables, or create a custom variable.  NOTE: If this setting is present all instances of %Server% and %ServerLabel% will be deleted from the string, but any surrounding characters that rely on it won''t be deleted. So if you''re expecting %Server%_, then the _ would remain, but %Server% would be deleted from the string.  This can cause uninteneded consequences so it''s best to never use this setting along with %Server% or %ServerLabel%.', 1, NULL ), 
('ServerCertExtension', '''.cer''', 0, 'The extension for the server certificate backups.  These are the certs in the master DB and are only backed up when master gets a FULL backup.  There are 2 files produced when you take a cert backup.  This controls the file extension of the cert backup file.  The private key file, which is needed to restore the cert backup file, will always have the extension ''pvk''.  This cannot be changed without changing the code.', 1, NULL ), 
('SMKExtension', '''.smk''', 0, 'This is the extension for the ServiceMasterKey backup file.', 1, NULL ), 
('CertName', '@CertName', 0, 'Static value.  This will add the current certificate name to the filename when a cert backup is taken.', 1, NULL ), 
('DBCertExtension', '''.cer''', 0, 'The extension for the database certificate backups.  These are the certs in the user DB and are only backed up when the user DB gets a FULL backup.  There are 2 files produced when you take a cert backup.  This controls the file extension of the cert backup file.  The private key file, which is needed to restore the cert backup file, will always have the extension ''pvk''.  This cannot be changed without changing the code.', 1, NULL ),
('Ordinal', '@Ordinal', 0, 'Static value.  This is the current ordinal of the number of files in your stripe.  If you have 6 files you can put the ordinal in the file names like 1of6, 2of6, 3of6 etc.  You can see this variable will increment with each file number.', 1, NULL ), 
('NumFiles', '@NumFiles', 0, 'Static value.  This value can''t be altered; it comes from an internal variable.  This variable represents the number of files in your striped set and is populated from the BackupTuningThresholds table.', 1, NULL )


END