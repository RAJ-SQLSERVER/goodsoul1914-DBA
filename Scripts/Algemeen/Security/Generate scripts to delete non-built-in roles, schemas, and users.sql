--generate scripts to delete non-built-in roles, schemas, and users from a SQL Server database
--based on built-in roles, schemas and users in SQL Server 2019
--helpful if inheriting legacy databases or for non-production testing
--note these queries only script the delete statements - for best results, run
--with "Results to Text" for better copy-pasting

--script drop statements for all non-standard security in a database
--need to, in order:
-- remove users from non-standard roles
-- delete non-standard roles
-- delete non-standard schemas
-- delete non-standard users

SET NOCOUNT ON;

--help
SELECT N'--statements below are intended to be tested and run separately, not all at once' AS "--script delete of non-built-in security";

--get non-standard roles into temp table
DECLARE @temp_Roles TABLE (principal_id INT NOT NULL, name sysname NOT NULL PRIMARY KEY);
INSERT INTO @temp_Roles
SELECT principal_id,
       name
FROM sys.database_principals
WHERE --roles
    type = 'R'
    AND
    --ignore in-built roles with identifiers 4 and lower e.g. public
    principal_id > 4
    AND
    --ignore system roles e.g. db_owner, db_datareader etc.
    --need to match on hard-coded names as may have identifiers higher than 16,000
    name NOT IN ( N'db_accessadmin', N'db_backupoperator', N'db_datareader', N'db_datawriter', N'db_ddladmin',
                  N'db_denydatareader', N'db_denydatawriter', N'db_owner', N'db_securityadmin'
);

--if we got any non-standard roles, script remove members then delete each role
IF 0 < (SELECT COUNT (*) FROM @temp_Roles)
BEGIN
    --need more complex query (similar to that generated by SSMS on deleting role) as
    --remove users from role is by name, not identifier
    SELECT N'ALTER ROLE ' + QUOTENAME (R.name, N'[') + N' DROP MEMBER ' + QUOTENAME (U.name, N'[') AS "--remove members from roles"
    FROM sys.database_role_members AS DRM
    INNER JOIN
        --roles
        @temp_Roles AS R
        ON DRM.role_principal_id = R.principal_id
    INNER JOIN
        --users
        sys.database_principals AS U
        ON DRM.member_principal_id = U.principal_id
    ORDER BY R.name,
             U.name;
    --script delete of roles
    SELECT N'DROP ROLE ' + QUOTENAME (name, N'[') AS "--delete roles"
    FROM @temp_Roles
    ORDER BY name;
END;

--script delete of non-standard schemas
SELECT N'DROP SCHEMA ' + QUOTENAME (name, N'[') AS "--delete schemas, will fail if any objects owned by schema, requires further manual investigation"
FROM sys.schemas
WHERE --ignore built-in schemas with identifiers 4 and lower
    schema_id > 4
    AND
    --ignore system schemas e.g. db_owner, db_datareader etc.
    --need to match on hard-coded names as may have identifiers higher than 16,000
    name NOT IN ( N'db_accessadmin', N'db_backupoperator', N'db_datareader', N'db_datawriter', N'db_ddladmin',
                  N'db_denydatareader', N'db_denydatawriter', N'db_owner', N'db_securityadmin'
)
ORDER BY name;

--script delete of non-standard users
SELECT N'DROP USER ' + QUOTENAME (name, N'[') AS "--delete users"
FROM sys.database_principals
WHERE --not roles
    type != 'R'
    AND
    --ignore built-in users (e.g. dbo, guest, INFORMATION_SCHEMA) with identifiers 4 and lower
    principal_id > 4
ORDER BY name;

--remind to check for "orphaned" users & logins once done
SELECT N'EXEC sp_change_users_login ''Report''' AS "--check for orphaned users";